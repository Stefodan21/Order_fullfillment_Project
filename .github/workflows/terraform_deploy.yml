# .github/workflows/deploy.yml
name: Deploy Infrastructure

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Zip Lambda functions and dependencies
        run: |
          zip_lambda() {
            FUNC_DIR=$1
            FUNC_FILE=$2
            ZIP_NAME=$3
            BUILD_DIR="./build"

            echo "ðŸ“¦ Zipping $FUNC_FILE into $ZIP_NAME.zip..."
            mkdir -p $BUILD_DIR
            cp "$FUNC_DIR/$FUNC_FILE" $BUILD_DIR/

            if [ -f "./requirements.txt" ]; then
            pip install -r "./requirements.txt" -t $BUILD_DIR/
            fi

            cd $BUILD_DIR && zip -r "../Infra/${ZIP_NAME}.zip" . && cd ..
            rm -rf $BUILD_DIR
          }


          zip_lambda "wf_trigger" "startworkflow.py" "start_workflow"
          zip_lambda "./order_validation" "order_validation.py" "order_validation"
          zip_lambda "./InvoiceGenerator" "InvoiceGenerator.py" "invoice_generator"
          zip_lambda "./ShippingSuggestion" "ShippingSuggestion.py" "shipping_suggestion"
          zip_lambda "./OrderStatusTracking" "OrderStatusTracking.py" "order_status_tracking"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: Infra

      - name: Terraform Plan
        run: terraform plan
        working-directory: Infra

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="region=${{ secrets.AWS_REGION }}" -var="environment=${{ secrets.ENVIRONMENT }}" -var="project_name=${{ secrets.PROJECT_NAME }}"
        working-directory: Infra

      - name: Notify Deployment Success
        run: echo "Deployment was successful!"